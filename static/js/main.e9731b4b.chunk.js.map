{"version":3,"sources":["components/FriendCard/index.js","components/Wrapper/index.js","components/Title/index.js","components/Score/index.js","App.js","index.js"],"names":["FriendCard","props","react_default","a","createElement","Object","defineProperty","onClick","removeFriend","id","className","alt","name","src","image","occupation","location","Wrapper","children","Title","class","Score","answers","score","randomItem","friends","Math","floor","random","length","App","state","_this","setState","i","includes","j","console","log","alert","window","reload","push","_this2","this","components_Wrapper","components_Title","components_Score","map","components_FriendCard","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e9731b4b.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./style.css\";\n\nfunction FriendCard(props) {\n// var randomItem = props.id[Math.floor(Math.random()*props.id)];\n\n  // console.log(props.id[Math.floor(Math.random()*props.id)])\n\n  return (\n    \n\n \n    <div  onClick={() => props.removeFriend(props.id)} className=\"remove\" className=\"card\">\n      \n\n\n\n      \n      <div className=\"img-container\">\n        <img alt={props.name} src={props.image} />\n      </div>\n      <div className=\"content\">\n        <ul>\n          <li>\n            <strong>Name:</strong> {props.name}\n          </li>\n          <li>\n            <strong>Occupation:</strong> {props.occupation}\n          </li>\n          <li>\n            <strong>Location:</strong> {props.location}\n          </li>\n        </ul>\n      </div>\n      {/* <span onClick={() => props.removeFriend(props.id)} className=\"remove\">\n        \n        \n        ùòÖ\n      </span> */}\n      {/* <span onClick={() => props.removeFriend2(props.id)} className=\"remove\">\n        \n        ùòÖ\n      </span> */}\n    </div>\n  );\n}\n\nexport default FriendCard;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Wrapper(props) {\n  return <div className=\"wrapper\">{props.children}</div>;\n}\n\nexport default Wrapper;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Title(props) {\n\n\n  \n\n  return   <div class=\"container\">\n  <div class=\"jumbotron\">\n  <h1 className=\"title\">{props.children}</h1>\n    {/* <h1>Bootstrap Tutorial</h1>  */}\n    {/* <p>Bootstrap is the most popular HTML, CSS, and JS framework for developing */}\n    {/* responsive, mobile-first projects on the web.</p>  */}\n  </div>\n  {/* <p>This is some text.</p>  */}\n  {/* <p>This is another text.</p>  */}\n</div>;\n}\n\nexport default Title;\n","import React from \"react\";\nimport \"./style.css\";\n\nfunction Score(props) {\n  return <h1 className=\"score\">{props.children}</h1>;\n}\n\nexport default Score;\n","import React, { Component } from \"react\";\nimport FriendCard from \"./components/FriendCard\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Score from \"./components/Score\";\n\n\nimport friends from \"./friends.json\";\n\n\n\nlet answers =[];\n// i dont think im actually using this answersdup variable\n// let answersdup =[];\nlet score = 0;\n// function getRandomItem(friends) {\n//   let items = Array.from(friends);\n\n//   return items[Math.floor(Math.random() * friends.length)];\n\n// }\nvar randomItem =[friends[Math.floor (Math.random()*2)+1],friends[Math.floor(Math.random()*10)],  friends[Math.floor(Math.random()*12)],friends[Math.floor(Math.random()*friends.length)],friends[Math.floor(Math.random()*10)+2],friends[Math.floor(Math.random()*friends.length)],friends[Math.floor(Math.random()*friends.length)],friends[Math.floor(Math.random()*7)+3],friends[Math.floor(Math.random()*friends.length)],friends[Math.floor(Math.random()*friends.length)] , friends[Math.floor(Math.random()*friends.length)],friends[Math.floor(Math.random()*friends.length)]  ]\n\n\n\n// var randomItem = friends[Math.floor(Math.random()*friends.length)];\n\n// console.log(randomItem)\n\n\nclass App extends Component {\n  \n  \n  // Setting this.state.friends to the friends json array\n  state = {\n    randomItem\n    \n  };\n  \n  \n\n  removeFriend = id => {\n\n\n\n    var randomItem =[friends[Math.floor (Math.random()*2)+1],friends[Math.floor(Math.random()*10)],  friends[Math.floor(Math.random()*12)],friends[Math.floor(Math.random()*friends.length)],friends[Math.floor(Math.random()*10)+2],friends[Math.floor(Math.random()*friends.length)],friends[Math.floor(Math.random()*friends.length)],friends[Math.floor(Math.random()*7)+3],friends[Math.floor(Math.random()*friends.length)],friends[Math.floor(Math.random()*friends.length)] , friends[Math.floor(Math.random()*friends.length)],friends[Math.floor(Math.random()*friends.length)]  ]\n\n\n    // if (id !== \"used\"){\n    //   turns++\n    // }\n   \n    // Filter this.state.friends for friends with an id not equal to the id being removed\n    // const friends = this.state.friends.filter(friend => friend.id !== id);\n    // Set this.state.friends equal to the new friends array\n    this.setState({ randomItem });\n\n    for (var i = 0; i < friends.length; i++)\n\n   if (friends[i].id=== id && answers.includes(j)!== friends[i].id){ \n    // this line below checks if a value is in the array\n    // console.log(answers.includes(friends[i].name)); \n    if (answers.includes(friends[i].name) === true)\n\n    \n    {console.log(\"seems to work \");\n    alert(`Game Over. Final Score: `+ score)\n    window.location.reload();\n\n    function empty() {\n      //empty your array\n      answers = [];\n  }\n  empty();\n  \n  score=0;\n\n  console.log(score)\n\n}\n\n    answers.push(friends[i].name);\n    for (var j = 0; j < answers.length; j++)\n    // on the line below, if you dont go in order, the array does not push. when i commented out the (id===friends[j].id clause. that seems to fix the bug. i also need to add a reset function\n    // if (id===friends[j].id){\n    // answersdup.push(friends[i].name) ;\n    // console.log(answersdup)\n   \n\n  // }\n    // this.setState({ answers });\n    // console.log(friends[i].id); \n\n    // console.log(answersdup.includes(friends[i].name))\n\n    // console.log(answersdup); \n    // console.log(([friends[i].name])); \n\n    // this line below checks if a value is in the array\n    //    console.log(answers.includes(friends[i].name)); \n    //    if (answers.includes(friends[i].name) === true)\n    // {console.log(\"getting closer\")}\n      //  for (var j = 0; j < answers.length; j++)\n       if(answers[j]=== friends[i].id\n        && \n        answers.length>=2)\n      //  )\n        {console.log(\"here\")}\n        score++;\n        console.log(score)\n\n\n      // console.log(turns )\n   }\n      \n      // console.log(friends[i])\n    \n  \n    \n\n// var score = 0;\n\n   // if(friends[i].id !== answers){ \n      // friends[i].id = \"used\";\n      // score++;\n      // console.log(score)\n\n\n      // console.log(friends)\n\n\n    \n\n }\n// }\n \n// for (var i = 0; i <= friends.length; i++)\n// console.log(friends[i])\n\n  //   if(id=== \"used\" &&  turns >=2){\n  //     console.log(\"score -1\")\n  //     console.log(turns )\n      \n  //   }\n      \n    \n  // };\n  \n\n  // Map over this.state.friends and render a FriendCard component for each friend object\n  render() {\n   // for (var i = 0; i <= friends.length; i++)\n\n    // var randomItem = friends[Math.floor(Math.random()*friends.length)];\n\n\n\n    \n    return (\n      \n      <Wrapper>\n\n        <Title>Friends List         <Score>{[score]}</Score>\n</Title>\n\n        \n        {this.state.randomItem.map(randomItem => (\n          \n          <FriendCard\n            removeFriend={this.removeFriend}\n            id={randomItem.id}\n            key={randomItem.id}\n            name={randomItem.name}\n            \n            image={randomItem.image}\n            occupation={randomItem.occupation}\n            location={randomItem.location}\n          />\n        ))}\n        \n      </Wrapper>\n         \n       \n    );\n  }\n  \n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n"],"sourceRoot":""}